{
  "name": "upload",
  "version": "0.1.3",
  "description": "Asynchronous file uploading using HTML5 file uploading or background iframes",
  "keywords": [
    "ender",
    "upload",
    "async",
    "files",
    "iframe",
    "form",
    "html5"
  ],
  "author": {
    "name": "Andrew McCollum",
    "email": "amccollum@gmail.com"
  },
  "url": "http://github.com/amccollum/upload",
  "repositories": [
    {
      "type": "git",
      "url": "https://github.com/amccollum/upload.git"
    }
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/mit-license.php"
    }
  ],
  "main": "lib/upload.js",
  "ender": "lib/ender.js",
  "directories": {
    "lib": "lib"
  },
  "dependencies": {
    "timeout": "*",
    "reqwest": "*"
  },
  "devDependencies": {
    "coffee-script": "*"
  },
  "readme": "upload\n======\n\nUpload your files asynchronously with HTML5:\n\n    upload.upload({\n        url: '/upload/handler',\n        data: fileObject,\n        progress: function (xhr, event) { alert(); },\n        success: function () { alert('Uploaded!'); },\n        error: function () { alert('FAIL!'); }\n    });\n\nIf you're on a browser that doesn't support HTML5 file uploads:\n\n    upload.isubmit({\n        url: '/upload/handler',\n        inputs: fileInputs,\n        success: function () { alert('Uploaded!'); },\n        error: function () { alert('FAIL!'); }\n    });\n    \nThis second function works with any type of form input, not just files, so you\nget asynchronous form submitting for free! Of course, for non-file inputs, you\ncould always just use an AJAX request...\n\nUsage with Ender\n----------------\nAfter you install [Ender](http://ender.no.de), include `upload` in your package:\n\n    ender add upload\n\nThis will namespace the package under the $ variable:\n\n    $.upload(...);\n    $.isubmit(...);",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/amccollum/upload.git"
  },
  "bugs": {
    "url": "https://github.com/amccollum/upload/issues"
  },
  "_id": "upload@0.1.3",
  "_from": "upload@"
}
